{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","addMovie","useState","query","setQuery","setMovie","confirmedQuery","setConfirmedQuery","loadingMovie","setLoadingMovie","errorMessage","setErrorMessage","useEffect","fetch","then","res","json","catch","Response","Error","getMovie","data","img","Poster","Title","Plot","imdbID","convertToMovie","finally","htmlFor","type","value","id","placeholder","classNames","onChange","e","target","onClick","preventDefault","trim","disabled","length","App","setMovies","some","currentMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.69338ee7.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\nimport { Movie } from '../../types/Movie';\nimport { getMovie } from '../../api';\nimport { MovieData } from '../../types/MovieData';\nimport { ResponseError } from '../../types/ReponseError';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  addMovie: (movie: Movie) => void;\n};\n\nexport const FindMovie: React.FC<Props> = ({ addMovie }) => {\n  const [query, setQuery] = useState('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [confirmedQuery, setConfirmedQuery] = useState('');\n  const [loadingMovie, setLoadingMovie] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(false);\n\n  const handleSetQuery = (\n    e: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    if (errorMessage) {\n      setQuery(e.target.value);\n      setErrorMessage(false);\n\n      return;\n    }\n\n    setQuery(e.target.value);\n  };\n\n  const handleFindMovie = (\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>,\n  ) => {\n    e.preventDefault();\n    setConfirmedQuery(query.trim());\n  };\n\n  const handleAddMovieToList = () => {\n    if (movie) {\n      addMovie(movie);\n      setQuery('');\n      setMovie(null);\n      setConfirmedQuery('');\n    }\n  };\n\n  const convertToMovie = (\n    data: MovieData | ResponseError,\n  ): Movie => {\n    if ('Title' in data) {\n      const img = data.Poster === 'N/A'\n        ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n        : data.Poster;\n\n      return {\n        title: data.Title,\n        description: data.Plot,\n        imgUrl: img,\n        imdbUrl: `https://www.imdb.com/title/${data.imdbID}`,\n        imdbId: data.imdbID,\n      };\n    }\n\n    throw new Error(`Response: ${data.Response}, Error: ${data.Error}`);\n  };\n\n  useEffect(() => {\n    if (confirmedQuery) {\n      setLoadingMovie(true);\n      getMovie(confirmedQuery)\n        .then(data => {\n          setMovie(convertToMovie(data));\n        })\n        .catch(() => {\n          setErrorMessage(false);\n        })\n        .finally(() => {\n          setLoadingMovie(false);\n        });\n    }\n  }, [confirmedQuery]);\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              value={query}\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', {\n                'is-danger': errorMessage,\n              })}\n              onChange={handleSetQuery}\n            />\n          </div>\n\n          {errorMessage && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames('button', {\n                'is-light': !loadingMovie,\n                'is-loading': loadingMovie,\n              })}\n              onClick={handleFindMovie}\n              disabled={!query.length}\n            >\n              {movie\n                ? 'Search again'\n                : 'Find a movie'}\n            </button>\n          </div>\n\n          {movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleAddMovieToList}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=362e4c27';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = (data: Movie) => {\n    if (movies.some(movie => movie.imdbId === data.imdbId)) {\n      return;\n    }\n\n    setMovies(currentMovies => [...currentMovies, data]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}